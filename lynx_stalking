#!/usr/bin/env python
# -*- coding: utf-8 -*-
# - ! - #
# Autor: Carlos E. Vieira

import requests
import sys
import os
import re
import json
import whois
from colors import *


def banner():
	os.system("cls" if os.name == "nt" else "clear")
	prGreen('''
 /$$                                             /$$$$$$   /$$               /$$ /$$       /$$                    
| $$                                            /$$__  $$ | $$              | $$| $$      |__/                    
| $$       /$$   /$$ /$$$$$$$  /$$   /$$       | $$  \__//$$$$$$    /$$$$$$ | $$| $$   /$$ /$$ /$$$$$$$   /$$$$$$ 
| $$      | $$  | $$| $$__  $$|  $$ /$$//$$$$$$|  $$$$$$|_  $$_/   |____  $$| $$| $$  /$$/| $$| $$__  $$ /$$__  $$
| $$      | $$  | $$| $$  \ $$ \  $$$$/|______/ \____  $$ | $$      /$$$$$$$| $$| $$$$$$/ | $$| $$  \ $$| $$  \ $$
| $$      | $$  | $$| $$  | $$  >$$  $$         /$$  \ $$ | $$ /$$ /$$__  $$| $$| $$_  $$ | $$| $$  | $$| $$  | $$
| $$$$$$$$|  $$$$$$$| $$  | $$ /$$/\  $$       |  $$$$$$/ |  $$$$/|  $$$$$$$| $$| $$ \  $$| $$| $$  | $$|  $$$$$$$
|________/ \____  $$|__/  |__/|__/  \__/        \______/   \___/   \_______/|__/|__/  \__/|__/|__/  |__/ \____  $$
           /$$  | $$                                                                                     /$$  \ $$
          |  $$$$$$/                                                                                    |  $$$$$$/
           \______/                                                                                      \______/ 
	
''')

banner()

def dumpinfo(data):
	prGreen("[?] Status: " + data['status'])
	prGreen("[!] CNPJ: " + data['cnpj'])
	prGreen("[T] Tipo: " + data['tipo'])
	prGreen("[A] Nome: " + data['nome'])
	prGreen("[0] Data de abertura: " + data['abertura'])
	prGreen("[$] Capital social: " + data['capital_social'])
	prGreen("[^] Outros nomes: " + data['fantasia'])
	if(data['email']):
		prGreen("[@] Email: " + data['email'])
	if(data['telefone']):
		prGreen("[5] Telefone: " + data['telefone'])
	if(len(data['qsa']) > 0):
		prGreen("[>] Pessoas:")
		for pessoa in data['qsa']:
			prGreen("\t [+] Nome: " + pessoa['nome'].encode('utf-8') + " <> " + pessoa['qual'].encode('utf-8'))
	prGreen("[>] Atividade: " + data['atividade_principal'][0]['text'].encode('utf-8'))
	prGreen("[>] Localização: ")
	prGreen("\t [+] Estado: " + data['uf'])
	prGreen("\t [+] Municipio: " + data['municipio'])
	prGreen("\t [+] CEP: " + data['cep'])
	prGreen("\t [+] Bairro: " + data['bairro'])
	prGreen("\t [+] Logradouro: " + data['logradouro'].encode('utf-8') + " N° " + data['numero'].encode('utf-8'))
	if(data['complemento']):
		prGreen("\t [+] Complemento: " + data['complemento'])

	if(len(data['atividades_secundarias']) > 0):
		prGreen("[>] Atividades Secundárias:")
		for atividade in data['atividades_secundarias']:
			prGreen("\t [+]" + atividade['text'].encode("utf-8"))

def retirarcaracteres(cnpj):
	prYellow("[~] Filtrando dados...")
	filtro = re.compile('([0-9]+)')
	resp = filtro.findall(cnpj)
	return resp

def buscainfo(cnpj):
	base = "https://www.receitaws.com.br/v1/cnpj/"
	request = requests.get(base + cnpj[0])
	data = json.loads(request.text)
	if(data['status'] == "ERROR"):
		prRed("[X] Ops, ocorreu um erro: %s"%data['message'].encode('utf-8'))
		prYellow("[!] CNPJ Informado: %s"%cnpj[0])
	else:
		dumpinfo(data)
def boot():

	if(len(sys.argv) < 2):
		prRed("[+] Use: ./lynx_stalking dominio")
		prYellow("[:] Exemplo: ./lynx_stalking site.com")

	else:
		prYellow("[~] Buscando informações sobre: %s"%(sys.argv[1]))
		try:
			inf = whois.whois(sys.argv[1])
		except:
			prRed("[X] Ops, Tivemos problemas para encontrar o domínio, tente novamente!")
			exit()
		if not inf['status']:
			prRed("[X] Ops, parece que esse domínio não existe!")
			exit()
		else:
			try:
				cnpj = re.sub('[^A-Za-z0-9]+', '', inf.ownerid)
				cnpj = retirarcaracteres(cnpj)
				buscainfo(cnpj)
				if type(inf['email']) is list:
					prGreen("[@] Email's: ")
					for email in inf['email']:
						prGreen("\t: [+] Email: " + email)
				else:
					prGreen("[@] Email: " + inf['email'])
				prGreen("[+] ID de registro de domínio: %s"%(inf['owner_c']).encode('utf-8'))
				hosp = whois.whois(inf['nserver'][0])
				if(hosp.ownerif == "None"):
					prRed("[X] Ops, Sem informações de hospedagem.")
				else:
					if(hosp['status']):
						prLightGray("\n[+] Informações sobre hospedagem de domínio [+]")
						hosp_cnpj = re.sub('[^A-Za-z0-9]+', '', hosp.ownerid)
						hosp_cnpj = retirarcaracteres(hosp_cnpj)
						buscainfo(hosp_cnpj)
						if type(hosp['email']) is list:
	                                        	prGreen("[@] Email's: ")
	                                        	for email in inf['email']:
	                                                	prGreen("\t: [+] Email: " + email)
					else:
						prRed('[X] Sem informações de hospedagem')
			except:
				prRed("[X] Ops, Tivemos problemas para idenfificar dados de %s"%sys.argv[1])
				prYellow("[!] Use apenas domínios nacionais, caso seja nacional teste novamente mais tarde!")
boot()
